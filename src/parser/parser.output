语法

    0 $accept: program $end

    1 program: program_head routine DOT

    2 program_head: PROGRAM IDENTIFIER SEMI

    3 routine: routine_head routine_body

    4 routine_head: const_part type_part var_part routine_part

    5 const_part: CONST const_expr_list
    6           | ε

    7 const_expr_list: const_expr_list name EQUAL const_value SEMI
    8                | name EQUAL const_value SEMI

    9 const_value: INTEGER
   10            | REAL
   11            | CHAR
   12            | SYS_CON

   13 type_part: TYPE type_decl_list
   14          | ε

   15 type_decl_list: type_decl_list type_definition
   16               | type_definition

   17 type_definition: name EQUAL type_decl SEMI

   18 type_decl: simple_type_decl
   19          | array_type_decl
   20          | record_type_decl

   21 simple_type_decl: SYS_TYPE
   22                 | name
   23                 | LP name_list RP
   24                 | const_value DOTDOT const_value
   25                 | MINUS const_value DOTDOT const_value
   26                 | MINUS const_value DOTDOT MINUS const_value
   27                 | name DOTDOT name

   28 array_type_decl: ARRAY LB simple_type_decl RB OF type_decl

   29 record_type_decl: RECORD field_decl_list END

   30 field_decl_list: field_decl_list field_decl
   31                | field_decl

   32 field_decl: name_list COLON type_decl SEMI

   33 name_list: name_list COMMA name
   34          | name

   35 var_part: VAR var_decl_list
   36         | ε

   37 var_decl_list: var_decl_list var_decl
   38              | var_decl

   39 var_decl: name_list COLON type_decl SEMI

   40 routine_part: routine_part function_decl
   41             | routine_part procedure_decl
   42             | ε

   43 function_decl: function_head SEMI sub_routine SEMI

   44 function_head: FUNCTION name parameters COLON simple_type_decl

   45 procedure_decl: procedure_head SEMI sub_routine SEMI

   46 procedure_head: PROCEDURE name parameters

   47 parameters: LP para_decl_list RP
   48           | ε

   49 para_decl_list: para_decl_list SEMI para_type_list
   50               | para_type_list

   51 para_type_list: var_para_list COLON simple_type_decl
   52               | val_para_list COLON simple_type_decl

   53 var_para_list: VAR name_list

   54 val_para_list: name_list

   55 sub_routine: routine_head routine_body

   56 routine_body: compound_stmt

   57 compound_stmt: SPL_BEGIN stmt_list END

   58 stmt_list: stmt_list stmt SEMI
   59          | ε

   60 stmt: INTEGER COLON non_label_stmt
   61     | non_label_stmt

   62 non_label_stmt: assign_stmt
   63               | proc_stmt
   64               | compound_stmt
   65               | if_stmt
   66               | repeat_stmt
   67               | while_stmt
   68               | for_stmt
   69               | case_stmt
   70               | goto_stmt

   71 assign_stmt: name ASSIGN expression
   72            | name LB expression RB ASSIGN expression
   73            | name DOT name ASSIGN expression

   74 proc_stmt: name
   75          | name LP args_list RP
   76          | SYS_PROC
   77          | SYS_PROC LP expression_list RP
   78          | READ LP factor RP

   79 if_stmt: IF expression THEN stmt else_clause ENDIF

   80 else_clause: ELSE stmt
   81            | ε

   82 repeat_stmt: REPEAT stmt_list UNTIL expression

   83 while_stmt: WHILE expression DO stmt

   84 for_stmt: FOR name ASSIGN expression direction expression DO stmt

   85 direction: TO
   86          | DOWNTO

   87 case_stmt: CASE expression OF case_expr_list END

   88 case_expr_list: case_expr_list case_expr
   89               | case_expr

   90 case_expr: const_value COLON stmt SEMI
   91          | name COLON stmt SEMI

   92 goto_stmt: GOTO INTEGER

   93 expression_list: expression_list COMMA expression
   94                | expression

   95 expression: expression GE expr
   96           | expression GT expr
   97           | expression LE expr
   98           | expression LT expr
   99           | expression EQUAL expr
  100           | expression UNEQUAL expr
  101           | expr

  102 expr: expr PLUS term
  103     | expr MINUS term
  104     | expr OR term
  105     | term

  106 term: term MUL factor
  107     | term DIV factor
  108     | term MOD factor
  109     | term AND factor
  110     | factor

  111 factor: name
  112       | name LP args_list RP
  113       | SYS_FUNCT
  114       | SYS_FUNCT LP args_list RP
  115       | const_value
  116       | LP expression RP
  117       | NOT factor
  118       | MINUS factor
  119       | name LB expression RB
  120       | name DOT name

  121 args_list: args_list COMMA expression
  122          | expression

  123 name: IDENTIFIER


终结语词，附有它们出现处的规则

    $end (0) 0
    error (256)
    LP (258) 23 47 75 77 78 112 114 116
    RP (259) 23 47 75 77 78 112 114 116
    LB (260) 28 72 119
    RB (261) 28 72 119
    DOT (262) 1 73 120
    COMMA (263) 33 93 121
    COLON (264) 32 39 44 51 52 60 90 91
    MUL (265) 106
    UNEQUAL (266) 100
    NOT (267) 117
    PLUS (268) 102
    MINUS (269) 25 26 103 118
    GE (270) 95
    GT (271) 96
    LE (272) 97
    LT (273) 98
    EQUAL (274) 7 8 17 99
    ASSIGN (275) 71 72 73 84
    MOD (276) 108
    DOTDOT (277) 24 25 26 27
    SEMI (278) 2 7 8 17 32 39 43 45 49 58 90 91
    AND (279) 109
    ARRAY (280) 28
    SPL_BEGIN (281) 57
    CASE (282) 87
    CONST (283) 5
    DIV (284) 107
    DO (285) 83 84
    DOWNTO (286) 86
    ELSE (287) 80
    END (288) 29 57 87
    FOR (289) 84
    FUNCTION (290) 44
    GOTO (291) 92
    IF (292) 79
    OF (293) 28 87
    OR (294) 104
    ENDIF (295) 79
    PROCEDURE (296) 46
    PROGRAM (297) 2
    RECORD (298) 29
    REPEAT (299) 82
    THEN (300) 79
    TO (301) 85
    TYPE (302) 13
    UNTIL (303) 82
    VAR (304) 35 53
    WHILE (305) 83
    INTEGER <int_value> (306) 9 60 92
    IDENTIFIER <str_value> (307) 2 123
    SYS_CON <str_value> (308) 12
    SYS_FUNCT <str_value> (309) 113 114
    SYS_PROC <str_value> (310) 76 77
    SYS_TYPE <str_value> (311) 21
    READ <str_value> (312) 78
    REAL <real_value> (313) 10
    CHAR <char_value> (314) 11


非终结语词，附有它们出现处的规则

    $accept (60)
        on left: 0
    program <program> (61)
        on left: 1
        on right: 0
    program_head <program_head> (62)
        on left: 2
        on right: 1
    routine <routine> (63)
        on left: 3
        on right: 1
    routine_head <routine_head> (64)
        on left: 4
        on right: 3 55
    const_part <const_expr> (65)
        on left: 5 6
        on right: 4
    const_expr_list <const_expr> (66)
        on left: 7 8
        on right: 5 7
    const_value <const_value> (67)
        on left: 9 10 11 12
        on right: 7 8 24 25 26 90 115
    type_part <type_definition> (68)
        on left: 13 14
        on right: 4
    type_decl_list <type_definition> (69)
        on left: 15 16
        on right: 13 15
    type_definition <type_definition> (70)
        on left: 17
        on right: 15 16
    type_decl <type_decl> (71)
        on left: 18 19 20
        on right: 17 28 32 39
    simple_type_decl <simple_type_decl> (72)
        on left: 21 22 23 24 25 26 27
        on right: 18 28 44 51 52
    array_type_decl <array_type_decl> (73)
        on left: 28
        on right: 19
    record_type_decl <record_type_decl> (74)
        on left: 29
        on right: 20
    field_decl_list <normal_decl> (75)
        on left: 30 31
        on right: 29 30
    field_decl <normal_decl> (76)
        on left: 32
        on right: 30 31
    name_list <identifier> (77)
        on left: 33 34
        on right: 23 32 33 39 53 54
    var_part <normal_decl> (78)
        on left: 35 36
        on right: 4
    var_decl_list <normal_decl> (79)
        on left: 37 38
        on right: 35 37
    var_decl <normal_decl> (80)
        on left: 39
        on right: 37 38
    routine_part <call_decl> (81)
        on left: 40 41 42
        on right: 4 40 41
    function_decl <function_decl> (82)
        on left: 43
        on right: 40
    function_head <function_head> (83)
        on left: 44
        on right: 43
    procedure_decl <procedure_decl> (84)
        on left: 45
        on right: 41
    procedure_head <procedure_head> (85)
        on left: 46
        on right: 45
    parameters <para_type_list> (86)
        on left: 47 48
        on right: 44 46
    para_decl_list <para_type_list> (87)
        on left: 49 50
        on right: 47 49
    para_type_list <para_type_list> (88)
        on left: 51 52
        on right: 49 50
    var_para_list <identifier> (89)
        on left: 53
        on right: 51
    val_para_list <identifier> (90)
        on left: 54
        on right: 52
    sub_routine <routine> (91)
        on left: 55
        on right: 43 45
    routine_body <routine_body> (92)
        on left: 56
        on right: 3 55
    compound_stmt <compound_stmt> (93)
        on left: 57
        on right: 56 64
    stmt_list <statement> (94)
        on left: 58 59
        on right: 57 58 82
    stmt <statement> (95)
        on left: 60 61
        on right: 58 79 80 83 84 90 91
    non_label_stmt <non_label_stmt> (96)
        on left: 62 63 64 65 66 67 68 69 70
        on right: 60 61
    assign_stmt <assign_stmt> (97)
        on left: 71 72 73
        on right: 62
    proc_stmt <proc_stmt> (98)
        on left: 74 75 76 77 78
        on right: 63
    if_stmt <if_stmt> (99)
        on left: 79
        on right: 65
    else_clause <statement> (100)
        on left: 80 81
        on right: 79
    repeat_stmt <repeat_stmt> (101)
        on left: 82
        on right: 66
    while_stmt <while_stmt> (102)
        on left: 83
        on right: 67
    for_stmt <for_stmt> (103)
        on left: 84
        on right: 68
    direction <direction> (104)
        on left: 85 86
        on right: 84
    case_stmt <case_stmt> (105)
        on left: 87
        on right: 69
    case_expr_list <case_expr> (106)
        on left: 88 89
        on right: 87 88
    case_expr <case_expr> (107)
        on left: 90 91
        on right: 88 89
    goto_stmt <goto_stmt> (108)
        on left: 92
        on right: 70
    expression_list <expression> (109)
        on left: 93 94
        on right: 77 93
    expression <expression> (110)
        on left: 95 96 97 98 99 100 101
        on right: 71 72 73 79 82 83 84 87 93 94 95 96 97 98 99 100 116 119 121 122
    expr <expr> (111)
        on left: 102 103 104 105
        on right: 95 96 97 98 99 100 101 102 103 104
    term <term> (112)
        on left: 106 107 108 109 110
        on right: 102 103 104 105 106 107 108 109
    factor <factor> (113)
        on left: 111 112 113 114 115 116 117 118 119 120
        on right: 78 106 107 108 109 110 117 118
    args_list <expression> (114)
        on left: 121 122
        on right: 75 112 114 121
    name <identifier> (115)
        on left: 123
        on right: 7 8 17 22 27 33 34 44 46 71 72 73 74 75 84 91 111 112 119 120


状态 0

    0 $accept: • program $end

    PROGRAM  偏移，并进入状态 1

    program       转到状态 2
    program_head  转到状态 3


状态 1

    2 program_head: PROGRAM • IDENTIFIER SEMI

    IDENTIFIER  偏移，并进入状态 4


状态 2

    0 $accept: program • $end

    $end  偏移，并进入状态 5


状态 3

    1 program: program_head • routine DOT

    CONST  偏移，并进入状态 6

    $default  使用规则 6 以归约 (const_part)

    routine       转到状态 7
    routine_head  转到状态 8
    const_part    转到状态 9


状态 4

    2 program_head: PROGRAM IDENTIFIER • SEMI

    SEMI  偏移，并进入状态 10


状态 5

    0 $accept: program $end •

    $default  接受


状态 6

    5 const_part: CONST • const_expr_list

    IDENTIFIER  偏移，并进入状态 11

    const_expr_list  转到状态 12
    name             转到状态 13


状态 7

    1 program: program_head routine • DOT

    DOT  偏移，并进入状态 14


状态 8

    3 routine: routine_head • routine_body

    SPL_BEGIN  偏移，并进入状态 15

    routine_body   转到状态 16
    compound_stmt  转到状态 17


状态 9

    4 routine_head: const_part • type_part var_part routine_part

    TYPE  偏移，并进入状态 18

    $default  使用规则 14 以归约 (type_part)

    type_part  转到状态 19


状态 10

    2 program_head: PROGRAM IDENTIFIER SEMI •

    $default  使用规则 2 以归约 (program_head)


状态 11

  123 name: IDENTIFIER •

    $default  使用规则 123 以归约 (name)


状态 12

    5 const_part: CONST const_expr_list •
    7 const_expr_list: const_expr_list • name EQUAL const_value SEMI

    IDENTIFIER  偏移，并进入状态 11

    $default  使用规则 5 以归约 (const_part)

    name  转到状态 20


状态 13

    8 const_expr_list: name • EQUAL const_value SEMI

    EQUAL  偏移，并进入状态 21


状态 14

    1 program: program_head routine DOT •

    $default  使用规则 1 以归约 (program)


状态 15

   57 compound_stmt: SPL_BEGIN • stmt_list END

    $default  使用规则 59 以归约 (stmt_list)

    stmt_list  转到状态 22


状态 16

    3 routine: routine_head routine_body •

    $default  使用规则 3 以归约 (routine)


状态 17

   56 routine_body: compound_stmt •

    $default  使用规则 56 以归约 (routine_body)


状态 18

   13 type_part: TYPE • type_decl_list

    IDENTIFIER  偏移，并进入状态 11

    type_decl_list   转到状态 23
    type_definition  转到状态 24
    name             转到状态 25


状态 19

    4 routine_head: const_part type_part • var_part routine_part

    VAR  偏移，并进入状态 26

    $default  使用规则 36 以归约 (var_part)

    var_part  转到状态 27


状态 20

    7 const_expr_list: const_expr_list name • EQUAL const_value SEMI

    EQUAL  偏移，并进入状态 28


状态 21

    8 const_expr_list: name EQUAL • const_value SEMI

    INTEGER  偏移，并进入状态 29
    SYS_CON  偏移，并进入状态 30
    REAL     偏移，并进入状态 31
    CHAR     偏移，并进入状态 32

    const_value  转到状态 33


状态 22

   57 compound_stmt: SPL_BEGIN stmt_list • END
   58 stmt_list: stmt_list • stmt SEMI

    SPL_BEGIN   偏移，并进入状态 15
    CASE        偏移，并进入状态 34
    END         偏移，并进入状态 35
    FOR         偏移，并进入状态 36
    GOTO        偏移，并进入状态 37
    IF          偏移，并进入状态 38
    REPEAT      偏移，并进入状态 39
    WHILE       偏移，并进入状态 40
    INTEGER     偏移，并进入状态 41
    IDENTIFIER  偏移，并进入状态 11
    SYS_PROC    偏移，并进入状态 42
    READ        偏移，并进入状态 43

    compound_stmt   转到状态 44
    stmt            转到状态 45
    non_label_stmt  转到状态 46
    assign_stmt     转到状态 47
    proc_stmt       转到状态 48
    if_stmt         转到状态 49
    repeat_stmt     转到状态 50
    while_stmt      转到状态 51
    for_stmt        转到状态 52
    case_stmt       转到状态 53
    goto_stmt       转到状态 54
    name            转到状态 55


状态 23

   13 type_part: TYPE type_decl_list •
   15 type_decl_list: type_decl_list • type_definition

    IDENTIFIER  偏移，并进入状态 11

    $default  使用规则 13 以归约 (type_part)

    type_definition  转到状态 56
    name             转到状态 25


状态 24

   16 type_decl_list: type_definition •

    $default  使用规则 16 以归约 (type_decl_list)


状态 25

   17 type_definition: name • EQUAL type_decl SEMI

    EQUAL  偏移，并进入状态 57


状态 26

   35 var_part: VAR • var_decl_list

    IDENTIFIER  偏移，并进入状态 11

    name_list      转到状态 58
    var_decl_list  转到状态 59
    var_decl       转到状态 60
    name           转到状态 61


状态 27

    4 routine_head: const_part type_part var_part • routine_part

    $default  使用规则 42 以归约 (routine_part)

    routine_part  转到状态 62


状态 28

    7 const_expr_list: const_expr_list name EQUAL • const_value SEMI

    INTEGER  偏移，并进入状态 29
    SYS_CON  偏移，并进入状态 30
    REAL     偏移，并进入状态 31
    CHAR     偏移，并进入状态 32

    const_value  转到状态 63


状态 29

    9 const_value: INTEGER •

    $default  使用规则 9 以归约 (const_value)


状态 30

   12 const_value: SYS_CON •

    $default  使用规则 12 以归约 (const_value)


状态 31

   10 const_value: REAL •

    $default  使用规则 10 以归约 (const_value)


状态 32

   11 const_value: CHAR •

    $default  使用规则 11 以归约 (const_value)


状态 33

    8 const_expr_list: name EQUAL const_value • SEMI

    SEMI  偏移，并进入状态 64


状态 34

   87 case_stmt: CASE • expression OF case_expr_list END

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    expression   转到状态 70
    expr         转到状态 71
    term         转到状态 72
    factor       转到状态 73
    name         转到状态 74


状态 35

   57 compound_stmt: SPL_BEGIN stmt_list END •

    $default  使用规则 57 以归约 (compound_stmt)


状态 36

   84 for_stmt: FOR • name ASSIGN expression direction expression DO stmt

    IDENTIFIER  偏移，并进入状态 11

    name  转到状态 75


状态 37

   92 goto_stmt: GOTO • INTEGER

    INTEGER  偏移，并进入状态 76


状态 38

   79 if_stmt: IF • expression THEN stmt else_clause ENDIF

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    expression   转到状态 77
    expr         转到状态 71
    term         转到状态 72
    factor       转到状态 73
    name         转到状态 74


状态 39

   82 repeat_stmt: REPEAT • stmt_list UNTIL expression

    $default  使用规则 59 以归约 (stmt_list)

    stmt_list  转到状态 78


状态 40

   83 while_stmt: WHILE • expression DO stmt

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    expression   转到状态 79
    expr         转到状态 71
    term         转到状态 72
    factor       转到状态 73
    name         转到状态 74


状态 41

   60 stmt: INTEGER • COLON non_label_stmt

    COLON  偏移，并进入状态 80


状态 42

   76 proc_stmt: SYS_PROC •
   77          | SYS_PROC • LP expression_list RP

    LP  偏移，并进入状态 81

    $default  使用规则 76 以归约 (proc_stmt)


状态 43

   78 proc_stmt: READ • LP factor RP

    LP  偏移，并进入状态 82


状态 44

   64 non_label_stmt: compound_stmt •

    $default  使用规则 64 以归约 (non_label_stmt)


状态 45

   58 stmt_list: stmt_list stmt • SEMI

    SEMI  偏移，并进入状态 83


状态 46

   61 stmt: non_label_stmt •

    $default  使用规则 61 以归约 (stmt)


状态 47

   62 non_label_stmt: assign_stmt •

    $default  使用规则 62 以归约 (non_label_stmt)


状态 48

   63 non_label_stmt: proc_stmt •

    $default  使用规则 63 以归约 (non_label_stmt)


状态 49

   65 non_label_stmt: if_stmt •

    $default  使用规则 65 以归约 (non_label_stmt)


状态 50

   66 non_label_stmt: repeat_stmt •

    $default  使用规则 66 以归约 (non_label_stmt)


状态 51

   67 non_label_stmt: while_stmt •

    $default  使用规则 67 以归约 (non_label_stmt)


状态 52

   68 non_label_stmt: for_stmt •

    $default  使用规则 68 以归约 (non_label_stmt)


状态 53

   69 non_label_stmt: case_stmt •

    $default  使用规则 69 以归约 (non_label_stmt)


状态 54

   70 non_label_stmt: goto_stmt •

    $default  使用规则 70 以归约 (non_label_stmt)


状态 55

   71 assign_stmt: name • ASSIGN expression
   72            | name • LB expression RB ASSIGN expression
   73            | name • DOT name ASSIGN expression
   74 proc_stmt: name •
   75          | name • LP args_list RP

    LP      偏移，并进入状态 84
    LB      偏移，并进入状态 85
    DOT     偏移，并进入状态 86
    ASSIGN  偏移，并进入状态 87

    $default  使用规则 74 以归约 (proc_stmt)


状态 56

   15 type_decl_list: type_decl_list type_definition •

    $default  使用规则 15 以归约 (type_decl_list)


状态 57

   17 type_definition: name EQUAL • type_decl SEMI

    LP          偏移，并进入状态 88
    MINUS       偏移，并进入状态 89
    ARRAY       偏移，并进入状态 90
    RECORD      偏移，并进入状态 91
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_TYPE    偏移，并进入状态 92
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value       转到状态 93
    type_decl         转到状态 94
    simple_type_decl  转到状态 95
    array_type_decl   转到状态 96
    record_type_decl  转到状态 97
    name              转到状态 98


状态 58

   33 name_list: name_list • COMMA name
   39 var_decl: name_list • COLON type_decl SEMI

    COMMA  偏移，并进入状态 99
    COLON  偏移，并进入状态 100


状态 59

   35 var_part: VAR var_decl_list •
   37 var_decl_list: var_decl_list • var_decl

    IDENTIFIER  偏移，并进入状态 11

    $default  使用规则 35 以归约 (var_part)

    name_list  转到状态 58
    var_decl   转到状态 101
    name       转到状态 61


状态 60

   38 var_decl_list: var_decl •

    $default  使用规则 38 以归约 (var_decl_list)


状态 61

   34 name_list: name •

    $default  使用规则 34 以归约 (name_list)


状态 62

    4 routine_head: const_part type_part var_part routine_part •
   40 routine_part: routine_part • function_decl
   41             | routine_part • procedure_decl

    FUNCTION   偏移，并进入状态 102
    PROCEDURE  偏移，并进入状态 103

    $default  使用规则 4 以归约 (routine_head)

    function_decl   转到状态 104
    function_head   转到状态 105
    procedure_decl  转到状态 106
    procedure_head  转到状态 107


状态 63

    7 const_expr_list: const_expr_list name EQUAL const_value • SEMI

    SEMI  偏移，并进入状态 108


状态 64

    8 const_expr_list: name EQUAL const_value SEMI •

    $default  使用规则 8 以归约 (const_expr_list)


状态 65

  116 factor: LP • expression RP

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    expression   转到状态 109
    expr         转到状态 71
    term         转到状态 72
    factor       转到状态 73
    name         转到状态 74


状态 66

  117 factor: NOT • factor

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    factor       转到状态 110
    name         转到状态 74


状态 67

  118 factor: MINUS • factor

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    factor       转到状态 111
    name         转到状态 74


状态 68

  113 factor: SYS_FUNCT •
  114       | SYS_FUNCT • LP args_list RP

    LP  偏移，并进入状态 112

    $default  使用规则 113 以归约 (factor)


状态 69

  115 factor: const_value •

    $default  使用规则 115 以归约 (factor)


状态 70

   87 case_stmt: CASE expression • OF case_expr_list END
   95 expression: expression • GE expr
   96           | expression • GT expr
   97           | expression • LE expr
   98           | expression • LT expr
   99           | expression • EQUAL expr
  100           | expression • UNEQUAL expr

    UNEQUAL  偏移，并进入状态 113
    GE       偏移，并进入状态 114
    GT       偏移，并进入状态 115
    LE       偏移，并进入状态 116
    LT       偏移，并进入状态 117
    EQUAL    偏移，并进入状态 118
    OF       偏移，并进入状态 119


状态 71

  101 expression: expr •
  102 expr: expr • PLUS term
  103     | expr • MINUS term
  104     | expr • OR term

    PLUS   偏移，并进入状态 120
    MINUS  偏移，并进入状态 121
    OR     偏移，并进入状态 122

    $default  使用规则 101 以归约 (expression)


状态 72

  105 expr: term •
  106 term: term • MUL factor
  107     | term • DIV factor
  108     | term • MOD factor
  109     | term • AND factor

    MUL  偏移，并进入状态 123
    MOD  偏移，并进入状态 124
    AND  偏移，并进入状态 125
    DIV  偏移，并进入状态 126

    $default  使用规则 105 以归约 (expr)


状态 73

  110 term: factor •

    $default  使用规则 110 以归约 (term)


状态 74

  111 factor: name •
  112       | name • LP args_list RP
  119       | name • LB expression RB
  120       | name • DOT name

    LP   偏移，并进入状态 127
    LB   偏移，并进入状态 128
    DOT  偏移，并进入状态 129

    $default  使用规则 111 以归约 (factor)


状态 75

   84 for_stmt: FOR name • ASSIGN expression direction expression DO stmt

    ASSIGN  偏移，并进入状态 130


状态 76

   92 goto_stmt: GOTO INTEGER •

    $default  使用规则 92 以归约 (goto_stmt)


状态 77

   79 if_stmt: IF expression • THEN stmt else_clause ENDIF
   95 expression: expression • GE expr
   96           | expression • GT expr
   97           | expression • LE expr
   98           | expression • LT expr
   99           | expression • EQUAL expr
  100           | expression • UNEQUAL expr

    UNEQUAL  偏移，并进入状态 113
    GE       偏移，并进入状态 114
    GT       偏移，并进入状态 115
    LE       偏移，并进入状态 116
    LT       偏移，并进入状态 117
    EQUAL    偏移，并进入状态 118
    THEN     偏移，并进入状态 131


状态 78

   58 stmt_list: stmt_list • stmt SEMI
   82 repeat_stmt: REPEAT stmt_list • UNTIL expression

    SPL_BEGIN   偏移，并进入状态 15
    CASE        偏移，并进入状态 34
    FOR         偏移，并进入状态 36
    GOTO        偏移，并进入状态 37
    IF          偏移，并进入状态 38
    REPEAT      偏移，并进入状态 39
    UNTIL       偏移，并进入状态 132
    WHILE       偏移，并进入状态 40
    INTEGER     偏移，并进入状态 41
    IDENTIFIER  偏移，并进入状态 11
    SYS_PROC    偏移，并进入状态 42
    READ        偏移，并进入状态 43

    compound_stmt   转到状态 44
    stmt            转到状态 45
    non_label_stmt  转到状态 46
    assign_stmt     转到状态 47
    proc_stmt       转到状态 48
    if_stmt         转到状态 49
    repeat_stmt     转到状态 50
    while_stmt      转到状态 51
    for_stmt        转到状态 52
    case_stmt       转到状态 53
    goto_stmt       转到状态 54
    name            转到状态 55


状态 79

   83 while_stmt: WHILE expression • DO stmt
   95 expression: expression • GE expr
   96           | expression • GT expr
   97           | expression • LE expr
   98           | expression • LT expr
   99           | expression • EQUAL expr
  100           | expression • UNEQUAL expr

    UNEQUAL  偏移，并进入状态 113
    GE       偏移，并进入状态 114
    GT       偏移，并进入状态 115
    LE       偏移，并进入状态 116
    LT       偏移，并进入状态 117
    EQUAL    偏移，并进入状态 118
    DO       偏移，并进入状态 133


状态 80

   60 stmt: INTEGER COLON • non_label_stmt

    SPL_BEGIN   偏移，并进入状态 15
    CASE        偏移，并进入状态 34
    FOR         偏移，并进入状态 36
    GOTO        偏移，并进入状态 37
    IF          偏移，并进入状态 38
    REPEAT      偏移，并进入状态 39
    WHILE       偏移，并进入状态 40
    IDENTIFIER  偏移，并进入状态 11
    SYS_PROC    偏移，并进入状态 42
    READ        偏移，并进入状态 43

    compound_stmt   转到状态 44
    non_label_stmt  转到状态 134
    assign_stmt     转到状态 47
    proc_stmt       转到状态 48
    if_stmt         转到状态 49
    repeat_stmt     转到状态 50
    while_stmt      转到状态 51
    for_stmt        转到状态 52
    case_stmt       转到状态 53
    goto_stmt       转到状态 54
    name            转到状态 55


状态 81

   77 proc_stmt: SYS_PROC LP • expression_list RP

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value      转到状态 69
    expression_list  转到状态 135
    expression       转到状态 136
    expr             转到状态 71
    term             转到状态 72
    factor           转到状态 73
    name             转到状态 74


状态 82

   78 proc_stmt: READ LP • factor RP

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    factor       转到状态 137
    name         转到状态 74


状态 83

   58 stmt_list: stmt_list stmt SEMI •

    $default  使用规则 58 以归约 (stmt_list)


状态 84

   75 proc_stmt: name LP • args_list RP

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    expression   转到状态 138
    expr         转到状态 71
    term         转到状态 72
    factor       转到状态 73
    args_list    转到状态 139
    name         转到状态 74


状态 85

   72 assign_stmt: name LB • expression RB ASSIGN expression

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    expression   转到状态 140
    expr         转到状态 71
    term         转到状态 72
    factor       转到状态 73
    name         转到状态 74


状态 86

   73 assign_stmt: name DOT • name ASSIGN expression

    IDENTIFIER  偏移，并进入状态 11

    name  转到状态 141


状态 87

   71 assign_stmt: name ASSIGN • expression

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    expression   转到状态 142
    expr         转到状态 71
    term         转到状态 72
    factor       转到状态 73
    name         转到状态 74


状态 88

   23 simple_type_decl: LP • name_list RP

    IDENTIFIER  偏移，并进入状态 11

    name_list  转到状态 143
    name       转到状态 61


状态 89

   25 simple_type_decl: MINUS • const_value DOTDOT const_value
   26                 | MINUS • const_value DOTDOT MINUS const_value

    INTEGER  偏移，并进入状态 29
    SYS_CON  偏移，并进入状态 30
    REAL     偏移，并进入状态 31
    CHAR     偏移，并进入状态 32

    const_value  转到状态 144


状态 90

   28 array_type_decl: ARRAY • LB simple_type_decl RB OF type_decl

    LB  偏移，并进入状态 145


状态 91

   29 record_type_decl: RECORD • field_decl_list END

    IDENTIFIER  偏移，并进入状态 11

    field_decl_list  转到状态 146
    field_decl       转到状态 147
    name_list        转到状态 148
    name             转到状态 61


状态 92

   21 simple_type_decl: SYS_TYPE •

    $default  使用规则 21 以归约 (simple_type_decl)


状态 93

   24 simple_type_decl: const_value • DOTDOT const_value

    DOTDOT  偏移，并进入状态 149


状态 94

   17 type_definition: name EQUAL type_decl • SEMI

    SEMI  偏移，并进入状态 150


状态 95

   18 type_decl: simple_type_decl •

    $default  使用规则 18 以归约 (type_decl)


状态 96

   19 type_decl: array_type_decl •

    $default  使用规则 19 以归约 (type_decl)


状态 97

   20 type_decl: record_type_decl •

    $default  使用规则 20 以归约 (type_decl)


状态 98

   22 simple_type_decl: name •
   27                 | name • DOTDOT name

    DOTDOT  偏移，并进入状态 151

    $default  使用规则 22 以归约 (simple_type_decl)


状态 99

   33 name_list: name_list COMMA • name

    IDENTIFIER  偏移，并进入状态 11

    name  转到状态 152


状态 100

   39 var_decl: name_list COLON • type_decl SEMI

    LP          偏移，并进入状态 88
    MINUS       偏移，并进入状态 89
    ARRAY       偏移，并进入状态 90
    RECORD      偏移，并进入状态 91
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_TYPE    偏移，并进入状态 92
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value       转到状态 93
    type_decl         转到状态 153
    simple_type_decl  转到状态 95
    array_type_decl   转到状态 96
    record_type_decl  转到状态 97
    name              转到状态 98


状态 101

   37 var_decl_list: var_decl_list var_decl •

    $default  使用规则 37 以归约 (var_decl_list)


状态 102

   44 function_head: FUNCTION • name parameters COLON simple_type_decl

    IDENTIFIER  偏移，并进入状态 11

    name  转到状态 154


状态 103

   46 procedure_head: PROCEDURE • name parameters

    IDENTIFIER  偏移，并进入状态 11

    name  转到状态 155


状态 104

   40 routine_part: routine_part function_decl •

    $default  使用规则 40 以归约 (routine_part)


状态 105

   43 function_decl: function_head • SEMI sub_routine SEMI

    SEMI  偏移，并进入状态 156


状态 106

   41 routine_part: routine_part procedure_decl •

    $default  使用规则 41 以归约 (routine_part)


状态 107

   45 procedure_decl: procedure_head • SEMI sub_routine SEMI

    SEMI  偏移，并进入状态 157


状态 108

    7 const_expr_list: const_expr_list name EQUAL const_value SEMI •

    $default  使用规则 7 以归约 (const_expr_list)


状态 109

   95 expression: expression • GE expr
   96           | expression • GT expr
   97           | expression • LE expr
   98           | expression • LT expr
   99           | expression • EQUAL expr
  100           | expression • UNEQUAL expr
  116 factor: LP expression • RP

    RP       偏移，并进入状态 158
    UNEQUAL  偏移，并进入状态 113
    GE       偏移，并进入状态 114
    GT       偏移，并进入状态 115
    LE       偏移，并进入状态 116
    LT       偏移，并进入状态 117
    EQUAL    偏移，并进入状态 118


状态 110

  117 factor: NOT factor •

    $default  使用规则 117 以归约 (factor)


状态 111

  118 factor: MINUS factor •

    $default  使用规则 118 以归约 (factor)


状态 112

  114 factor: SYS_FUNCT LP • args_list RP

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    expression   转到状态 138
    expr         转到状态 71
    term         转到状态 72
    factor       转到状态 73
    args_list    转到状态 159
    name         转到状态 74


状态 113

  100 expression: expression UNEQUAL • expr

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    expr         转到状态 160
    term         转到状态 72
    factor       转到状态 73
    name         转到状态 74


状态 114

   95 expression: expression GE • expr

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    expr         转到状态 161
    term         转到状态 72
    factor       转到状态 73
    name         转到状态 74


状态 115

   96 expression: expression GT • expr

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    expr         转到状态 162
    term         转到状态 72
    factor       转到状态 73
    name         转到状态 74


状态 116

   97 expression: expression LE • expr

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    expr         转到状态 163
    term         转到状态 72
    factor       转到状态 73
    name         转到状态 74


状态 117

   98 expression: expression LT • expr

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    expr         转到状态 164
    term         转到状态 72
    factor       转到状态 73
    name         转到状态 74


状态 118

   99 expression: expression EQUAL • expr

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    expr         转到状态 165
    term         转到状态 72
    factor       转到状态 73
    name         转到状态 74


状态 119

   87 case_stmt: CASE expression OF • case_expr_list END

    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value     转到状态 166
    case_expr_list  转到状态 167
    case_expr       转到状态 168
    name            转到状态 169


状态 120

  102 expr: expr PLUS • term

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    term         转到状态 170
    factor       转到状态 73
    name         转到状态 74


状态 121

  103 expr: expr MINUS • term

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    term         转到状态 171
    factor       转到状态 73
    name         转到状态 74


状态 122

  104 expr: expr OR • term

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    term         转到状态 172
    factor       转到状态 73
    name         转到状态 74


状态 123

  106 term: term MUL • factor

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    factor       转到状态 173
    name         转到状态 74


状态 124

  108 term: term MOD • factor

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    factor       转到状态 174
    name         转到状态 74


状态 125

  109 term: term AND • factor

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    factor       转到状态 175
    name         转到状态 74


状态 126

  107 term: term DIV • factor

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    factor       转到状态 176
    name         转到状态 74


状态 127

  112 factor: name LP • args_list RP

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    expression   转到状态 138
    expr         转到状态 71
    term         转到状态 72
    factor       转到状态 73
    args_list    转到状态 177
    name         转到状态 74


状态 128

  119 factor: name LB • expression RB

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    expression   转到状态 178
    expr         转到状态 71
    term         转到状态 72
    factor       转到状态 73
    name         转到状态 74


状态 129

  120 factor: name DOT • name

    IDENTIFIER  偏移，并进入状态 11

    name  转到状态 179


状态 130

   84 for_stmt: FOR name ASSIGN • expression direction expression DO stmt

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    expression   转到状态 180
    expr         转到状态 71
    term         转到状态 72
    factor       转到状态 73
    name         转到状态 74


状态 131

   79 if_stmt: IF expression THEN • stmt else_clause ENDIF

    SPL_BEGIN   偏移，并进入状态 15
    CASE        偏移，并进入状态 34
    FOR         偏移，并进入状态 36
    GOTO        偏移，并进入状态 37
    IF          偏移，并进入状态 38
    REPEAT      偏移，并进入状态 39
    WHILE       偏移，并进入状态 40
    INTEGER     偏移，并进入状态 41
    IDENTIFIER  偏移，并进入状态 11
    SYS_PROC    偏移，并进入状态 42
    READ        偏移，并进入状态 43

    compound_stmt   转到状态 44
    stmt            转到状态 181
    non_label_stmt  转到状态 46
    assign_stmt     转到状态 47
    proc_stmt       转到状态 48
    if_stmt         转到状态 49
    repeat_stmt     转到状态 50
    while_stmt      转到状态 51
    for_stmt        转到状态 52
    case_stmt       转到状态 53
    goto_stmt       转到状态 54
    name            转到状态 55


状态 132

   82 repeat_stmt: REPEAT stmt_list UNTIL • expression

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    expression   转到状态 182
    expr         转到状态 71
    term         转到状态 72
    factor       转到状态 73
    name         转到状态 74


状态 133

   83 while_stmt: WHILE expression DO • stmt

    SPL_BEGIN   偏移，并进入状态 15
    CASE        偏移，并进入状态 34
    FOR         偏移，并进入状态 36
    GOTO        偏移，并进入状态 37
    IF          偏移，并进入状态 38
    REPEAT      偏移，并进入状态 39
    WHILE       偏移，并进入状态 40
    INTEGER     偏移，并进入状态 41
    IDENTIFIER  偏移，并进入状态 11
    SYS_PROC    偏移，并进入状态 42
    READ        偏移，并进入状态 43

    compound_stmt   转到状态 44
    stmt            转到状态 183
    non_label_stmt  转到状态 46
    assign_stmt     转到状态 47
    proc_stmt       转到状态 48
    if_stmt         转到状态 49
    repeat_stmt     转到状态 50
    while_stmt      转到状态 51
    for_stmt        转到状态 52
    case_stmt       转到状态 53
    goto_stmt       转到状态 54
    name            转到状态 55


状态 134

   60 stmt: INTEGER COLON non_label_stmt •

    $default  使用规则 60 以归约 (stmt)


状态 135

   77 proc_stmt: SYS_PROC LP expression_list • RP
   93 expression_list: expression_list • COMMA expression

    RP     偏移，并进入状态 184
    COMMA  偏移，并进入状态 185


状态 136

   94 expression_list: expression •
   95 expression: expression • GE expr
   96           | expression • GT expr
   97           | expression • LE expr
   98           | expression • LT expr
   99           | expression • EQUAL expr
  100           | expression • UNEQUAL expr

    UNEQUAL  偏移，并进入状态 113
    GE       偏移，并进入状态 114
    GT       偏移，并进入状态 115
    LE       偏移，并进入状态 116
    LT       偏移，并进入状态 117
    EQUAL    偏移，并进入状态 118

    $default  使用规则 94 以归约 (expression_list)


状态 137

   78 proc_stmt: READ LP factor • RP

    RP  偏移，并进入状态 186


状态 138

   95 expression: expression • GE expr
   96           | expression • GT expr
   97           | expression • LE expr
   98           | expression • LT expr
   99           | expression • EQUAL expr
  100           | expression • UNEQUAL expr
  122 args_list: expression •

    UNEQUAL  偏移，并进入状态 113
    GE       偏移，并进入状态 114
    GT       偏移，并进入状态 115
    LE       偏移，并进入状态 116
    LT       偏移，并进入状态 117
    EQUAL    偏移，并进入状态 118

    $default  使用规则 122 以归约 (args_list)


状态 139

   75 proc_stmt: name LP args_list • RP
  121 args_list: args_list • COMMA expression

    RP     偏移，并进入状态 187
    COMMA  偏移，并进入状态 188


状态 140

   72 assign_stmt: name LB expression • RB ASSIGN expression
   95 expression: expression • GE expr
   96           | expression • GT expr
   97           | expression • LE expr
   98           | expression • LT expr
   99           | expression • EQUAL expr
  100           | expression • UNEQUAL expr

    RB       偏移，并进入状态 189
    UNEQUAL  偏移，并进入状态 113
    GE       偏移，并进入状态 114
    GT       偏移，并进入状态 115
    LE       偏移，并进入状态 116
    LT       偏移，并进入状态 117
    EQUAL    偏移，并进入状态 118


状态 141

   73 assign_stmt: name DOT name • ASSIGN expression

    ASSIGN  偏移，并进入状态 190


状态 142

   71 assign_stmt: name ASSIGN expression •
   95 expression: expression • GE expr
   96           | expression • GT expr
   97           | expression • LE expr
   98           | expression • LT expr
   99           | expression • EQUAL expr
  100           | expression • UNEQUAL expr

    UNEQUAL  偏移，并进入状态 113
    GE       偏移，并进入状态 114
    GT       偏移，并进入状态 115
    LE       偏移，并进入状态 116
    LT       偏移，并进入状态 117
    EQUAL    偏移，并进入状态 118

    $default  使用规则 71 以归约 (assign_stmt)


状态 143

   23 simple_type_decl: LP name_list • RP
   33 name_list: name_list • COMMA name

    RP     偏移，并进入状态 191
    COMMA  偏移，并进入状态 99


状态 144

   25 simple_type_decl: MINUS const_value • DOTDOT const_value
   26                 | MINUS const_value • DOTDOT MINUS const_value

    DOTDOT  偏移，并进入状态 192


状态 145

   28 array_type_decl: ARRAY LB • simple_type_decl RB OF type_decl

    LP          偏移，并进入状态 88
    MINUS       偏移，并进入状态 89
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_TYPE    偏移，并进入状态 92
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value       转到状态 93
    simple_type_decl  转到状态 193
    name              转到状态 98


状态 146

   29 record_type_decl: RECORD field_decl_list • END
   30 field_decl_list: field_decl_list • field_decl

    END         偏移，并进入状态 194
    IDENTIFIER  偏移，并进入状态 11

    field_decl  转到状态 195
    name_list   转到状态 148
    name        转到状态 61


状态 147

   31 field_decl_list: field_decl •

    $default  使用规则 31 以归约 (field_decl_list)


状态 148

   32 field_decl: name_list • COLON type_decl SEMI
   33 name_list: name_list • COMMA name

    COMMA  偏移，并进入状态 99
    COLON  偏移，并进入状态 196


状态 149

   24 simple_type_decl: const_value DOTDOT • const_value

    INTEGER  偏移，并进入状态 29
    SYS_CON  偏移，并进入状态 30
    REAL     偏移，并进入状态 31
    CHAR     偏移，并进入状态 32

    const_value  转到状态 197


状态 150

   17 type_definition: name EQUAL type_decl SEMI •

    $default  使用规则 17 以归约 (type_definition)


状态 151

   27 simple_type_decl: name DOTDOT • name

    IDENTIFIER  偏移，并进入状态 11

    name  转到状态 198


状态 152

   33 name_list: name_list COMMA name •

    $default  使用规则 33 以归约 (name_list)


状态 153

   39 var_decl: name_list COLON type_decl • SEMI

    SEMI  偏移，并进入状态 199


状态 154

   44 function_head: FUNCTION name • parameters COLON simple_type_decl

    LP  偏移，并进入状态 200

    $default  使用规则 48 以归约 (parameters)

    parameters  转到状态 201


状态 155

   46 procedure_head: PROCEDURE name • parameters

    LP  偏移，并进入状态 200

    $default  使用规则 48 以归约 (parameters)

    parameters  转到状态 202


状态 156

   43 function_decl: function_head SEMI • sub_routine SEMI

    CONST  偏移，并进入状态 6

    $default  使用规则 6 以归约 (const_part)

    routine_head  转到状态 203
    const_part    转到状态 9
    sub_routine   转到状态 204


状态 157

   45 procedure_decl: procedure_head SEMI • sub_routine SEMI

    CONST  偏移，并进入状态 6

    $default  使用规则 6 以归约 (const_part)

    routine_head  转到状态 203
    const_part    转到状态 9
    sub_routine   转到状态 205


状态 158

  116 factor: LP expression RP •

    $default  使用规则 116 以归约 (factor)


状态 159

  114 factor: SYS_FUNCT LP args_list • RP
  121 args_list: args_list • COMMA expression

    RP     偏移，并进入状态 206
    COMMA  偏移，并进入状态 188


状态 160

  100 expression: expression UNEQUAL expr •
  102 expr: expr • PLUS term
  103     | expr • MINUS term
  104     | expr • OR term

    PLUS   偏移，并进入状态 120
    MINUS  偏移，并进入状态 121
    OR     偏移，并进入状态 122

    $default  使用规则 100 以归约 (expression)


状态 161

   95 expression: expression GE expr •
  102 expr: expr • PLUS term
  103     | expr • MINUS term
  104     | expr • OR term

    PLUS   偏移，并进入状态 120
    MINUS  偏移，并进入状态 121
    OR     偏移，并进入状态 122

    $default  使用规则 95 以归约 (expression)


状态 162

   96 expression: expression GT expr •
  102 expr: expr • PLUS term
  103     | expr • MINUS term
  104     | expr • OR term

    PLUS   偏移，并进入状态 120
    MINUS  偏移，并进入状态 121
    OR     偏移，并进入状态 122

    $default  使用规则 96 以归约 (expression)


状态 163

   97 expression: expression LE expr •
  102 expr: expr • PLUS term
  103     | expr • MINUS term
  104     | expr • OR term

    PLUS   偏移，并进入状态 120
    MINUS  偏移，并进入状态 121
    OR     偏移，并进入状态 122

    $default  使用规则 97 以归约 (expression)


状态 164

   98 expression: expression LT expr •
  102 expr: expr • PLUS term
  103     | expr • MINUS term
  104     | expr • OR term

    PLUS   偏移，并进入状态 120
    MINUS  偏移，并进入状态 121
    OR     偏移，并进入状态 122

    $default  使用规则 98 以归约 (expression)


状态 165

   99 expression: expression EQUAL expr •
  102 expr: expr • PLUS term
  103     | expr • MINUS term
  104     | expr • OR term

    PLUS   偏移，并进入状态 120
    MINUS  偏移，并进入状态 121
    OR     偏移，并进入状态 122

    $default  使用规则 99 以归约 (expression)


状态 166

   90 case_expr: const_value • COLON stmt SEMI

    COLON  偏移，并进入状态 207


状态 167

   87 case_stmt: CASE expression OF case_expr_list • END
   88 case_expr_list: case_expr_list • case_expr

    END         偏移，并进入状态 208
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 166
    case_expr    转到状态 209
    name         转到状态 169


状态 168

   89 case_expr_list: case_expr •

    $default  使用规则 89 以归约 (case_expr_list)


状态 169

   91 case_expr: name • COLON stmt SEMI

    COLON  偏移，并进入状态 210


状态 170

  102 expr: expr PLUS term •
  106 term: term • MUL factor
  107     | term • DIV factor
  108     | term • MOD factor
  109     | term • AND factor

    MUL  偏移，并进入状态 123
    MOD  偏移，并进入状态 124
    AND  偏移，并进入状态 125
    DIV  偏移，并进入状态 126

    $default  使用规则 102 以归约 (expr)


状态 171

  103 expr: expr MINUS term •
  106 term: term • MUL factor
  107     | term • DIV factor
  108     | term • MOD factor
  109     | term • AND factor

    MUL  偏移，并进入状态 123
    MOD  偏移，并进入状态 124
    AND  偏移，并进入状态 125
    DIV  偏移，并进入状态 126

    $default  使用规则 103 以归约 (expr)


状态 172

  104 expr: expr OR term •
  106 term: term • MUL factor
  107     | term • DIV factor
  108     | term • MOD factor
  109     | term • AND factor

    MUL  偏移，并进入状态 123
    MOD  偏移，并进入状态 124
    AND  偏移，并进入状态 125
    DIV  偏移，并进入状态 126

    $default  使用规则 104 以归约 (expr)


状态 173

  106 term: term MUL factor •

    $default  使用规则 106 以归约 (term)


状态 174

  108 term: term MOD factor •

    $default  使用规则 108 以归约 (term)


状态 175

  109 term: term AND factor •

    $default  使用规则 109 以归约 (term)


状态 176

  107 term: term DIV factor •

    $default  使用规则 107 以归约 (term)


状态 177

  112 factor: name LP args_list • RP
  121 args_list: args_list • COMMA expression

    RP     偏移，并进入状态 211
    COMMA  偏移，并进入状态 188


状态 178

   95 expression: expression • GE expr
   96           | expression • GT expr
   97           | expression • LE expr
   98           | expression • LT expr
   99           | expression • EQUAL expr
  100           | expression • UNEQUAL expr
  119 factor: name LB expression • RB

    RB       偏移，并进入状态 212
    UNEQUAL  偏移，并进入状态 113
    GE       偏移，并进入状态 114
    GT       偏移，并进入状态 115
    LE       偏移，并进入状态 116
    LT       偏移，并进入状态 117
    EQUAL    偏移，并进入状态 118


状态 179

  120 factor: name DOT name •

    $default  使用规则 120 以归约 (factor)


状态 180

   84 for_stmt: FOR name ASSIGN expression • direction expression DO stmt
   95 expression: expression • GE expr
   96           | expression • GT expr
   97           | expression • LE expr
   98           | expression • LT expr
   99           | expression • EQUAL expr
  100           | expression • UNEQUAL expr

    UNEQUAL  偏移，并进入状态 113
    GE       偏移，并进入状态 114
    GT       偏移，并进入状态 115
    LE       偏移，并进入状态 116
    LT       偏移，并进入状态 117
    EQUAL    偏移，并进入状态 118
    DOWNTO   偏移，并进入状态 213
    TO       偏移，并进入状态 214

    direction  转到状态 215


状态 181

   79 if_stmt: IF expression THEN stmt • else_clause ENDIF

    ELSE  偏移，并进入状态 216

    $default  使用规则 81 以归约 (else_clause)

    else_clause  转到状态 217


状态 182

   82 repeat_stmt: REPEAT stmt_list UNTIL expression •
   95 expression: expression • GE expr
   96           | expression • GT expr
   97           | expression • LE expr
   98           | expression • LT expr
   99           | expression • EQUAL expr
  100           | expression • UNEQUAL expr

    UNEQUAL  偏移，并进入状态 113
    GE       偏移，并进入状态 114
    GT       偏移，并进入状态 115
    LE       偏移，并进入状态 116
    LT       偏移，并进入状态 117
    EQUAL    偏移，并进入状态 118

    $default  使用规则 82 以归约 (repeat_stmt)


状态 183

   83 while_stmt: WHILE expression DO stmt •

    $default  使用规则 83 以归约 (while_stmt)


状态 184

   77 proc_stmt: SYS_PROC LP expression_list RP •

    $default  使用规则 77 以归约 (proc_stmt)


状态 185

   93 expression_list: expression_list COMMA • expression

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    expression   转到状态 218
    expr         转到状态 71
    term         转到状态 72
    factor       转到状态 73
    name         转到状态 74


状态 186

   78 proc_stmt: READ LP factor RP •

    $default  使用规则 78 以归约 (proc_stmt)


状态 187

   75 proc_stmt: name LP args_list RP •

    $default  使用规则 75 以归约 (proc_stmt)


状态 188

  121 args_list: args_list COMMA • expression

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    expression   转到状态 219
    expr         转到状态 71
    term         转到状态 72
    factor       转到状态 73
    name         转到状态 74


状态 189

   72 assign_stmt: name LB expression RB • ASSIGN expression

    ASSIGN  偏移，并进入状态 220


状态 190

   73 assign_stmt: name DOT name ASSIGN • expression

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    expression   转到状态 221
    expr         转到状态 71
    term         转到状态 72
    factor       转到状态 73
    name         转到状态 74


状态 191

   23 simple_type_decl: LP name_list RP •

    $default  使用规则 23 以归约 (simple_type_decl)


状态 192

   25 simple_type_decl: MINUS const_value DOTDOT • const_value
   26                 | MINUS const_value DOTDOT • MINUS const_value

    MINUS    偏移，并进入状态 222
    INTEGER  偏移，并进入状态 29
    SYS_CON  偏移，并进入状态 30
    REAL     偏移，并进入状态 31
    CHAR     偏移，并进入状态 32

    const_value  转到状态 223


状态 193

   28 array_type_decl: ARRAY LB simple_type_decl • RB OF type_decl

    RB  偏移，并进入状态 224


状态 194

   29 record_type_decl: RECORD field_decl_list END •

    $default  使用规则 29 以归约 (record_type_decl)


状态 195

   30 field_decl_list: field_decl_list field_decl •

    $default  使用规则 30 以归约 (field_decl_list)


状态 196

   32 field_decl: name_list COLON • type_decl SEMI

    LP          偏移，并进入状态 88
    MINUS       偏移，并进入状态 89
    ARRAY       偏移，并进入状态 90
    RECORD      偏移，并进入状态 91
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_TYPE    偏移，并进入状态 92
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value       转到状态 93
    type_decl         转到状态 225
    simple_type_decl  转到状态 95
    array_type_decl   转到状态 96
    record_type_decl  转到状态 97
    name              转到状态 98


状态 197

   24 simple_type_decl: const_value DOTDOT const_value •

    $default  使用规则 24 以归约 (simple_type_decl)


状态 198

   27 simple_type_decl: name DOTDOT name •

    $default  使用规则 27 以归约 (simple_type_decl)


状态 199

   39 var_decl: name_list COLON type_decl SEMI •

    $default  使用规则 39 以归约 (var_decl)


状态 200

   47 parameters: LP • para_decl_list RP

    VAR         偏移，并进入状态 226
    IDENTIFIER  偏移，并进入状态 11

    name_list       转到状态 227
    para_decl_list  转到状态 228
    para_type_list  转到状态 229
    var_para_list   转到状态 230
    val_para_list   转到状态 231
    name            转到状态 61


状态 201

   44 function_head: FUNCTION name parameters • COLON simple_type_decl

    COLON  偏移，并进入状态 232


状态 202

   46 procedure_head: PROCEDURE name parameters •

    $default  使用规则 46 以归约 (procedure_head)


状态 203

   55 sub_routine: routine_head • routine_body

    SPL_BEGIN  偏移，并进入状态 15

    routine_body   转到状态 233
    compound_stmt  转到状态 17


状态 204

   43 function_decl: function_head SEMI sub_routine • SEMI

    SEMI  偏移，并进入状态 234


状态 205

   45 procedure_decl: procedure_head SEMI sub_routine • SEMI

    SEMI  偏移，并进入状态 235


状态 206

  114 factor: SYS_FUNCT LP args_list RP •

    $default  使用规则 114 以归约 (factor)


状态 207

   90 case_expr: const_value COLON • stmt SEMI

    SPL_BEGIN   偏移，并进入状态 15
    CASE        偏移，并进入状态 34
    FOR         偏移，并进入状态 36
    GOTO        偏移，并进入状态 37
    IF          偏移，并进入状态 38
    REPEAT      偏移，并进入状态 39
    WHILE       偏移，并进入状态 40
    INTEGER     偏移，并进入状态 41
    IDENTIFIER  偏移，并进入状态 11
    SYS_PROC    偏移，并进入状态 42
    READ        偏移，并进入状态 43

    compound_stmt   转到状态 44
    stmt            转到状态 236
    non_label_stmt  转到状态 46
    assign_stmt     转到状态 47
    proc_stmt       转到状态 48
    if_stmt         转到状态 49
    repeat_stmt     转到状态 50
    while_stmt      转到状态 51
    for_stmt        转到状态 52
    case_stmt       转到状态 53
    goto_stmt       转到状态 54
    name            转到状态 55


状态 208

   87 case_stmt: CASE expression OF case_expr_list END •

    $default  使用规则 87 以归约 (case_stmt)


状态 209

   88 case_expr_list: case_expr_list case_expr •

    $default  使用规则 88 以归约 (case_expr_list)


状态 210

   91 case_expr: name COLON • stmt SEMI

    SPL_BEGIN   偏移，并进入状态 15
    CASE        偏移，并进入状态 34
    FOR         偏移，并进入状态 36
    GOTO        偏移，并进入状态 37
    IF          偏移，并进入状态 38
    REPEAT      偏移，并进入状态 39
    WHILE       偏移，并进入状态 40
    INTEGER     偏移，并进入状态 41
    IDENTIFIER  偏移，并进入状态 11
    SYS_PROC    偏移，并进入状态 42
    READ        偏移，并进入状态 43

    compound_stmt   转到状态 44
    stmt            转到状态 237
    non_label_stmt  转到状态 46
    assign_stmt     转到状态 47
    proc_stmt       转到状态 48
    if_stmt         转到状态 49
    repeat_stmt     转到状态 50
    while_stmt      转到状态 51
    for_stmt        转到状态 52
    case_stmt       转到状态 53
    goto_stmt       转到状态 54
    name            转到状态 55


状态 211

  112 factor: name LP args_list RP •

    $default  使用规则 112 以归约 (factor)


状态 212

  119 factor: name LB expression RB •

    $default  使用规则 119 以归约 (factor)


状态 213

   86 direction: DOWNTO •

    $default  使用规则 86 以归约 (direction)


状态 214

   85 direction: TO •

    $default  使用规则 85 以归约 (direction)


状态 215

   84 for_stmt: FOR name ASSIGN expression direction • expression DO stmt

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    expression   转到状态 238
    expr         转到状态 71
    term         转到状态 72
    factor       转到状态 73
    name         转到状态 74


状态 216

   80 else_clause: ELSE • stmt

    SPL_BEGIN   偏移，并进入状态 15
    CASE        偏移，并进入状态 34
    FOR         偏移，并进入状态 36
    GOTO        偏移，并进入状态 37
    IF          偏移，并进入状态 38
    REPEAT      偏移，并进入状态 39
    WHILE       偏移，并进入状态 40
    INTEGER     偏移，并进入状态 41
    IDENTIFIER  偏移，并进入状态 11
    SYS_PROC    偏移，并进入状态 42
    READ        偏移，并进入状态 43

    compound_stmt   转到状态 44
    stmt            转到状态 239
    non_label_stmt  转到状态 46
    assign_stmt     转到状态 47
    proc_stmt       转到状态 48
    if_stmt         转到状态 49
    repeat_stmt     转到状态 50
    while_stmt      转到状态 51
    for_stmt        转到状态 52
    case_stmt       转到状态 53
    goto_stmt       转到状态 54
    name            转到状态 55


状态 217

   79 if_stmt: IF expression THEN stmt else_clause • ENDIF

    ENDIF  偏移，并进入状态 240


状态 218

   93 expression_list: expression_list COMMA expression •
   95 expression: expression • GE expr
   96           | expression • GT expr
   97           | expression • LE expr
   98           | expression • LT expr
   99           | expression • EQUAL expr
  100           | expression • UNEQUAL expr

    UNEQUAL  偏移，并进入状态 113
    GE       偏移，并进入状态 114
    GT       偏移，并进入状态 115
    LE       偏移，并进入状态 116
    LT       偏移，并进入状态 117
    EQUAL    偏移，并进入状态 118

    $default  使用规则 93 以归约 (expression_list)


状态 219

   95 expression: expression • GE expr
   96           | expression • GT expr
   97           | expression • LE expr
   98           | expression • LT expr
   99           | expression • EQUAL expr
  100           | expression • UNEQUAL expr
  121 args_list: args_list COMMA expression •

    UNEQUAL  偏移，并进入状态 113
    GE       偏移，并进入状态 114
    GT       偏移，并进入状态 115
    LE       偏移，并进入状态 116
    LT       偏移，并进入状态 117
    EQUAL    偏移，并进入状态 118

    $default  使用规则 121 以归约 (args_list)


状态 220

   72 assign_stmt: name LB expression RB ASSIGN • expression

    LP          偏移，并进入状态 65
    NOT         偏移，并进入状态 66
    MINUS       偏移，并进入状态 67
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_FUNCT   偏移，并进入状态 68
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value  转到状态 69
    expression   转到状态 241
    expr         转到状态 71
    term         转到状态 72
    factor       转到状态 73
    name         转到状态 74


状态 221

   73 assign_stmt: name DOT name ASSIGN expression •
   95 expression: expression • GE expr
   96           | expression • GT expr
   97           | expression • LE expr
   98           | expression • LT expr
   99           | expression • EQUAL expr
  100           | expression • UNEQUAL expr

    UNEQUAL  偏移，并进入状态 113
    GE       偏移，并进入状态 114
    GT       偏移，并进入状态 115
    LE       偏移，并进入状态 116
    LT       偏移，并进入状态 117
    EQUAL    偏移，并进入状态 118

    $default  使用规则 73 以归约 (assign_stmt)


状态 222

   26 simple_type_decl: MINUS const_value DOTDOT MINUS • const_value

    INTEGER  偏移，并进入状态 29
    SYS_CON  偏移，并进入状态 30
    REAL     偏移，并进入状态 31
    CHAR     偏移，并进入状态 32

    const_value  转到状态 242


状态 223

   25 simple_type_decl: MINUS const_value DOTDOT const_value •

    $default  使用规则 25 以归约 (simple_type_decl)


状态 224

   28 array_type_decl: ARRAY LB simple_type_decl RB • OF type_decl

    OF  偏移，并进入状态 243


状态 225

   32 field_decl: name_list COLON type_decl • SEMI

    SEMI  偏移，并进入状态 244


状态 226

   53 var_para_list: VAR • name_list

    IDENTIFIER  偏移，并进入状态 11

    name_list  转到状态 245
    name       转到状态 61


状态 227

   33 name_list: name_list • COMMA name
   54 val_para_list: name_list •

    COMMA  偏移，并进入状态 99

    $default  使用规则 54 以归约 (val_para_list)


状态 228

   47 parameters: LP para_decl_list • RP
   49 para_decl_list: para_decl_list • SEMI para_type_list

    RP    偏移，并进入状态 246
    SEMI  偏移，并进入状态 247


状态 229

   50 para_decl_list: para_type_list •

    $default  使用规则 50 以归约 (para_decl_list)


状态 230

   51 para_type_list: var_para_list • COLON simple_type_decl

    COLON  偏移，并进入状态 248


状态 231

   52 para_type_list: val_para_list • COLON simple_type_decl

    COLON  偏移，并进入状态 249


状态 232

   44 function_head: FUNCTION name parameters COLON • simple_type_decl

    LP          偏移，并进入状态 88
    MINUS       偏移，并进入状态 89
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_TYPE    偏移，并进入状态 92
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value       转到状态 93
    simple_type_decl  转到状态 250
    name              转到状态 98


状态 233

   55 sub_routine: routine_head routine_body •

    $default  使用规则 55 以归约 (sub_routine)


状态 234

   43 function_decl: function_head SEMI sub_routine SEMI •

    $default  使用规则 43 以归约 (function_decl)


状态 235

   45 procedure_decl: procedure_head SEMI sub_routine SEMI •

    $default  使用规则 45 以归约 (procedure_decl)


状态 236

   90 case_expr: const_value COLON stmt • SEMI

    SEMI  偏移，并进入状态 251


状态 237

   91 case_expr: name COLON stmt • SEMI

    SEMI  偏移，并进入状态 252


状态 238

   84 for_stmt: FOR name ASSIGN expression direction expression • DO stmt
   95 expression: expression • GE expr
   96           | expression • GT expr
   97           | expression • LE expr
   98           | expression • LT expr
   99           | expression • EQUAL expr
  100           | expression • UNEQUAL expr

    UNEQUAL  偏移，并进入状态 113
    GE       偏移，并进入状态 114
    GT       偏移，并进入状态 115
    LE       偏移，并进入状态 116
    LT       偏移，并进入状态 117
    EQUAL    偏移，并进入状态 118
    DO       偏移，并进入状态 253


状态 239

   80 else_clause: ELSE stmt •

    $default  使用规则 80 以归约 (else_clause)


状态 240

   79 if_stmt: IF expression THEN stmt else_clause ENDIF •

    $default  使用规则 79 以归约 (if_stmt)


状态 241

   72 assign_stmt: name LB expression RB ASSIGN expression •
   95 expression: expression • GE expr
   96           | expression • GT expr
   97           | expression • LE expr
   98           | expression • LT expr
   99           | expression • EQUAL expr
  100           | expression • UNEQUAL expr

    UNEQUAL  偏移，并进入状态 113
    GE       偏移，并进入状态 114
    GT       偏移，并进入状态 115
    LE       偏移，并进入状态 116
    LT       偏移，并进入状态 117
    EQUAL    偏移，并进入状态 118

    $default  使用规则 72 以归约 (assign_stmt)


状态 242

   26 simple_type_decl: MINUS const_value DOTDOT MINUS const_value •

    $default  使用规则 26 以归约 (simple_type_decl)


状态 243

   28 array_type_decl: ARRAY LB simple_type_decl RB OF • type_decl

    LP          偏移，并进入状态 88
    MINUS       偏移，并进入状态 89
    ARRAY       偏移，并进入状态 90
    RECORD      偏移，并进入状态 91
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_TYPE    偏移，并进入状态 92
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value       转到状态 93
    type_decl         转到状态 254
    simple_type_decl  转到状态 95
    array_type_decl   转到状态 96
    record_type_decl  转到状态 97
    name              转到状态 98


状态 244

   32 field_decl: name_list COLON type_decl SEMI •

    $default  使用规则 32 以归约 (field_decl)


状态 245

   33 name_list: name_list • COMMA name
   53 var_para_list: VAR name_list •

    COMMA  偏移，并进入状态 99

    $default  使用规则 53 以归约 (var_para_list)


状态 246

   47 parameters: LP para_decl_list RP •

    $default  使用规则 47 以归约 (parameters)


状态 247

   49 para_decl_list: para_decl_list SEMI • para_type_list

    VAR         偏移，并进入状态 226
    IDENTIFIER  偏移，并进入状态 11

    name_list       转到状态 227
    para_type_list  转到状态 255
    var_para_list   转到状态 230
    val_para_list   转到状态 231
    name            转到状态 61


状态 248

   51 para_type_list: var_para_list COLON • simple_type_decl

    LP          偏移，并进入状态 88
    MINUS       偏移，并进入状态 89
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_TYPE    偏移，并进入状态 92
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value       转到状态 93
    simple_type_decl  转到状态 256
    name              转到状态 98


状态 249

   52 para_type_list: val_para_list COLON • simple_type_decl

    LP          偏移，并进入状态 88
    MINUS       偏移，并进入状态 89
    INTEGER     偏移，并进入状态 29
    IDENTIFIER  偏移，并进入状态 11
    SYS_CON     偏移，并进入状态 30
    SYS_TYPE    偏移，并进入状态 92
    REAL        偏移，并进入状态 31
    CHAR        偏移，并进入状态 32

    const_value       转到状态 93
    simple_type_decl  转到状态 257
    name              转到状态 98


状态 250

   44 function_head: FUNCTION name parameters COLON simple_type_decl •

    $default  使用规则 44 以归约 (function_head)


状态 251

   90 case_expr: const_value COLON stmt SEMI •

    $default  使用规则 90 以归约 (case_expr)


状态 252

   91 case_expr: name COLON stmt SEMI •

    $default  使用规则 91 以归约 (case_expr)


状态 253

   84 for_stmt: FOR name ASSIGN expression direction expression DO • stmt

    SPL_BEGIN   偏移，并进入状态 15
    CASE        偏移，并进入状态 34
    FOR         偏移，并进入状态 36
    GOTO        偏移，并进入状态 37
    IF          偏移，并进入状态 38
    REPEAT      偏移，并进入状态 39
    WHILE       偏移，并进入状态 40
    INTEGER     偏移，并进入状态 41
    IDENTIFIER  偏移，并进入状态 11
    SYS_PROC    偏移，并进入状态 42
    READ        偏移，并进入状态 43

    compound_stmt   转到状态 44
    stmt            转到状态 258
    non_label_stmt  转到状态 46
    assign_stmt     转到状态 47
    proc_stmt       转到状态 48
    if_stmt         转到状态 49
    repeat_stmt     转到状态 50
    while_stmt      转到状态 51
    for_stmt        转到状态 52
    case_stmt       转到状态 53
    goto_stmt       转到状态 54
    name            转到状态 55


状态 254

   28 array_type_decl: ARRAY LB simple_type_decl RB OF type_decl •

    $default  使用规则 28 以归约 (array_type_decl)


状态 255

   49 para_decl_list: para_decl_list SEMI para_type_list •

    $default  使用规则 49 以归约 (para_decl_list)


状态 256

   51 para_type_list: var_para_list COLON simple_type_decl •

    $default  使用规则 51 以归约 (para_type_list)


状态 257

   52 para_type_list: val_para_list COLON simple_type_decl •

    $default  使用规则 52 以归约 (para_type_list)


状态 258

   84 for_stmt: FOR name ASSIGN expression direction expression DO stmt •

    $default  使用规则 84 以归约 (for_stmt)
